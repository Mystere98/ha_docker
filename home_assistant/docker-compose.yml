services:

####################HASS
  home_assistant:
    container_name: home_assistant
    image: "homeassistant/home-assistant:latest"
    volumes:
    # map general conf to data folder (gets larget due to DB) 
      - /home/r0oland/docker/data/homeassistant_data:/config
    # map config related stuff to docker folder to keep long-term
      - /home/r0oland/docker/home_assistant/config/pyscript/:/config/pyscript/
      - /home/r0oland/docker/home_assistant/config/automations.yaml:/config/automations.yaml
      - /home/r0oland/docker/home_assistant/config/configuration.yaml:/config/configuration.yaml
    # some other stuff I don't remember what it does 
      - /etc/localtime:/etc/localtime:ro
      - /run/dbus:/run/dbus:ro
    restart: unless-stopped
    privileged: true
    network_mode: host
    devices:
      # - /dev/serial/by-id/usb-ITead_Sonoff_Zigbee_3.0_USB_Dongle_Plus_c09c3e0feb21ec11a74920c32c86906c-if00-port0:/dev/ttyUSB0
      - /dev/serial/by-id/usb-Silicon_Labs_CP2102_USB_to_UART_Bridge_Controller_0064-if00-port0:/dev/ttyUSB1
    healthcheck:
      test: ["CMD", "curl", "-f", "http://127.0.0.1:8123"]
      interval: 120s
      timeout: 10s
      retries: 3
    depends_on:
      - grafana
      - mosquitto
      # - zigbee2mqtt

###################
  mosquitto:
    container_name: mosquitto
    image: eclipse-mosquitto
    ports:
      - 1883:1883
      - 9001:9001
    volumes:
      - /home/r0oland/docker/data/mosquitto_data:/mosquitto
      - /home/r0oland/docker/data/mosquitto_data/data:/mosquitto/data
      - /home/r0oland/docker/data/mosquitto_data/log:/mosquitto/log
    restart: unless-stopped

# ###################
  zigbee2mqtt:
    container_name: zigbee2mqtt
    image: koenkk/zigbee2mqtt
    volumes:
      - /home/r0oland/docker/data/zigbee2mqtt_data:/app/data
      # z2m configured with HA so we store conf there as well
      - /home/r0oland/docker/home_assistant/z2m_conf.yaml:/app/data/configuration.yaml

    ports:
      - 8080:8080
    restart: unless-stopped
    depends_on:
      - mosquitto
    # devices:
      # - /dev/serial/by-id/usb-ITead_Sonoff_Zigbee_3.0_USB_Dongle_Plus_c09c3e0feb21ec11a74920c32c86906c-if00-port0:/dev/ttyACM0

###################
  influxdb:
    image: influxdb:latest
    ports:
      - '8086:8086'
    volumes:
      - /home/r0oland/docker/data/influxData:/var/lib/influxdb2:rw
    environment:
      - INFLUXDB_DB=db0
    restart: unless-stopped  

###################
  chronograf:
    image: chronograf:latest
    ports:
      - '127.0.0.1:8888:8888'
    volumes:
      - chronograf-storage:/var/lib/chronograf
    depends_on:
      - influxdb
    environment:
      - INFLUXDB_URL=http://influxdb:8086
      - INFLUXDB_USERNAME=${INFLUXDB_USERNAME}
      - INFLUXDB_PASSWORD=${INFLUXDB_PASSWORD}
    restart: unless-stopped  
    
###################
  grafana:
    image: grafana/grafana:latest
    ports:
      - '3000:3000'
    user: '1000'
    volumes:
      - /home/r0oland/docker/data/grafana:/var/lib/grafana
    depends_on:
      - influxdb
      - chronograf
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_USERNAME}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_SECURITY_ALLOW_EMBEDDING=true
      - GF_AUTH_ANONYMOUS_ORG_NAME=HA
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Viewer
    restart: unless-stopped

###################
  glances:
    image: nicolargo/glances:latest-full
    restart: unless-stopped
    ports:
      - "61208:61208"
    environment:
      GLANCES_OPT: "-w" 
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    pid: "host"


# ###################
# disable for now, we are adding our ESP home devices manually
# see https://github.com/r0oland/SmartHomePlayground/tree/main/ESP32_to_HomeAssistant
  # esphome:
  #   image: esphome/esphome
  #   volumes:
  #     - /home/r0oland/docker/data/esphome:/config:rw
  #     # Use local time for logging timestamps
  #     - /etc/localtime:/etc/localtime:ro
  #   network_mode: host
  #   restart: unless-stopped  
  
################### Node Red
  # node-red:
  #   container_name: node_red
  #   image: nodered/node-red:latest
  #   environment:
  #     - TZ=Europe/Amsterdam
  #   ports:
  #     - 1880:1880
  #   networks:
  #     - node-red-net
  #   volumes:
  #     - node-red-data:/data
  #   restart: unless-stopped

###################TASMOADMIN
  # tasmoadmin:
  #   container_name: tasmoadmin
  #   image: raymondmm/tasmoadmin
  #   ports:
  #     - 9999:80
  #   volumes:
  #     - /home/r0oland/docker/data/tasmoadmin_data:/data
  #   restart: unless-stopped

# Volumes ======================================================================
volumes:
  chronograf-storage:
  # tasmoadmin_data:
  # node-red-data:

# networks:
  # node-red-net: